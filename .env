# ---------------------------------------------------------------------------
# FINAL .ENV TEMPLATE FOR DUAL-MODULE MODBUS I/O SYSTEM
#
# INSTRUCTIONS:
# 1. Copy this entire content into your `.env` file, replacing the old one.
# 2. Fill in your unique secret keys for SERVER_SECRET_KEY and SECURITY_API_KEY.
# 3. Verify that the MODBUS_PORT and camera settings match your hardware.
# ---------------------------------------------------------------------------

# --- Application Environment ---
# Set to "development" for debug endpoints, "production" for deployment.
APP_ENV=development

TIMEZONE=Asia/Kolkata

# --- Logging ---
# Set to "true" to see detailed state machine and event logs in the console.
LOGGING_VERBOSE_LOGGING=true

# --- Project & Server ---
PROJECT_NAME="Raspberry Pi 5 Box Counter System - Modbus IO"
SERVER_HOST=0.0.0.0
SERVER_PORT=8000
# IMPORTANT: Generate a new, long, random string for security (e.g., `openssl rand -hex 32`)
SERVER_SECRET_KEY="8d062b3e4f15c210b28d69a31fcda64fc0c210d3fe864d626fd40bbc486a1fa9"

# --- Security ---
# A static API key for protected endpoints like Emergency Stop.
SECURITY_API_KEY="your_secret_api_key_here"

# --- Database ---
# For production, consider using PostgreSQL instead of SQLite.
DB_URL="sqlite+aiosqlite:///./data/box_counter.db"
DB_ECHO=false

# ---------------------------------------------------------------------------
# NEW: Modbus RTU Communication (RS485)
# This section replaces the old GPIO settings.
# ---------------------------------------------------------------------------
MODBUS_PORT=/dev/ttyUSB0
MODBUS_BAUDRATE=9600
MODBUS_TIMEOUT_SEC=0.5
MODBUS_POLLING_MS=50
# Slave ID for the USR-IO4040 (Inputs)
MODBUS_DEVICE_ADDRESS_INPUTS=1
# Slave ID for the USR-IO8000 (Outputs)
MODBUS_DEVICE_ADDRESS_OUTPUTS=2

# --- Sensor Channel Mapping (on USR-IO4040) ---
# Physical channel number (1-4) on the input module.
# Based on your previous file: DI1 and DI3 are used.
SENSORS_ENTRY_CHANNEL=2
SENSORS_EXIT_CHANNEL=1

# ---------------------------------------------------------------------------
# NEW: Output Channel Mapping (on USR-IO8000)
# This maps logical names to the 0-indexed coil address of the USR-IO8000's
# internal relays. RO1=0, RO2=1, RO3=2, etc.
# ---------------------------------------------------------------------------
OUTPUTS_CONVEYOR=4
OUTPUTS_GATE=0
OUTPUTS_DIVERTER=0
OUTPUTS_LED_GREEN=3
OUTPUTS_LED_RED=3
OUTPUTS_BUZZER=1
OUTPUTS_CAMERA_LIGHT=6
OUTPUTS_CAMERA_LIGHT_TWO=5

# --- Physical Conveyor System Dimensions ---
CONVEYOR_SPEED_M_PER_SEC=0.5
CONVEYOR_CAMERA_TO_SORTER_DISTANCE_M=1.0

# --- Orchestration Settings ---
ORCHESTRATION_POST_BATCH_DELAY_SEC=5

# --- General Camera & UI Settings ---
CAMERA_MODE="rpi"  # Options: "rpi", "usb", "both", "none"
CAMERA_CAPTURES_DIR="web/static/captures"
CAMERA_TRIGGER_DELAY_MS=1500
UI_ANIMATION_TRANSIT_TIME_SEC=11

# --- RASPBERRY PI CAMERA SETTINGS ---/base/axi/pcie@1000120000/rp1/i2c@80000/imx219@10
# Find this value with `libcamera-hello --list-cameras` /base/axi/pcie@1000120000/rp1/i2c@80000/imx219@10
CAMERA_RPI_ID="/base/axi/pcie@1000120000/rp1/i2c@80000/imx219@10"
CAMERA_RPI_RESOLUTION_WIDTH=1280
CAMERA_RPI_RESOLUTION_HEIGHT=720
CAMERA_RPI_FPS=60
CAMERA_RPI_JPEG_QUALITY=100
CAMERA_RPI_SHUTTER_SPEED=0
CAMERA_RPI_ISO=0
CAMERA_RPI_MANUAL_FOCUS=0.0

# --- USB CAMERA SETTINGS ---
# Find this value with `v4l2-ctl --list-devices`
CAMERA_USB_DEVICE_INDEX=0
CAMERA_USB_RESOLUTION_WIDTH=1280
CAMERA_USB_RESOLUTION_HEIGHT=720
CAMERA_USB_FPS=30
CAMERA_USB_JPEG_QUALITY=100
CAMERA_USB_AUTOFOCUS=1
CAMERA_USB_BRIGHTNESS=128
CAMERA_USB_GAIN=250
CAMERA_USB_EXPOSURE=-7


QC_BATCH_COMPLETION_DELAY_S=5
# ----------------------------------------------------
# OBSOLETE GPIO SECTION
# This entire section is no longer used by the application
# and can be safely deleted from your .env file.
# ----------------------------------------------------
# GPIO_PIN_CONVEYOR_RELAY=26
# GPIO_PIN_GATE_RELAY=22
# GPIO_PIN_STATUS_LED_GREEN=27
# GPIO_PIN_STATUS_LED_RED=23
# GPIO_PIN_BUZZER=24
# GPIO_PIN_DIVERTER_RELAY=27```



# --- Conveyor & Run Logic ---
# The time in seconds to wait after the last object clears the exit sensor
# before automatically stopping the conveyor. Set to 0 to disable.
CONVEYOR_AUTO_STOP_DELAY_SEC=4

# The maximum time an object is allowed to be on the conveyor before it's
# considered "stalled" and a run failure is triggered.
CONVEYOR_MAX_TRANSIT_TIME_SEC=45.0



# --- Buzzer Alerts (Durations in Milliseconds) ---

BUZZER_MISMATCH_MS=500
BUZZER_MANUAL_TOGGLE_MS=200
BUZZER_LOOP_COMPLETE_MS=1000
BUZZER_EXIT_SENSOR_MS=150



############external API URL############ http://192.168.88.97:3001/

AI_API_BASE_URL="http://192.168.88.97:3001"
